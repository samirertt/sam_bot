<?xml version="1.0"?>
<robot name="sam_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.31"/>  <!-- Width of the robot -->
  <xacro:property name="base_length" value="0.42"/>  <!-- Length of the robot -->
  <xacro:property name="base_height" value="0.18"/>  <!-- Height of the robot -->

  <xacro:property name="wheel_radius" value="0.10"/>  <!-- Radius of the main wheels -->
  <xacro:property name="wheel_width" value="0.04"/>   <!-- Width of the main wheels -->
  <xacro:property name="wheel_ygap" value="0.025"/>   <!-- Y gap offset for main wheels -->
  <xacro:property name="wheel_zoff" value="0.05"/>    <!-- Z offset for wheel height (under chassis) -->
  <xacro:property name="wheel_xoff" value="0.12"/>    <!-- X offset for wheel placement along length -->

  <xacro:property name="caster_xoff" value="0.14"/>   <!-- Caster wheel offset for x-axis positioning -->

  <!-- Define wheel positions -->
  <!-- Main wheels are in the middle of the chassis but off to the sides for width -->
  <xacro:property name="main_wheel_x" value="0.0"/>  <!-- Centered on the x-axis -->
  <xacro:property name="main_wheel_y" value="0.0"/>  <!-- Centered on the y-axis for width -->
  <xacro:property name="main_wheel_z" value="0.0"/>  <!-- Located under the chassis, adjusted for height -->

  <!-- Caster wheel positions at four corners, placed beneath the chassis -->
  <xacro:property name="caster_front_left_x" value="-base_length/2 + caster_xoff"/>
  <xacro:property name="caster_front_left_y" value="base_width/2 - caster_xoff"/>
  <xacro:property name="caster_front_left_z" value="-wheel_zoff"/>

  <xacro:property name="caster_front_right_x" value="-base_length/2 + caster_xoff"/>
  <xacro:property name="caster_front_right_y" value="-base_width/2 + caster_xoff"/>
  <xacro:property name="caster_front_right_z" value="-wheel_zoff"/>

  <xacro:property name="caster_rear_left_x" value="base_length/2 - caster_xoff"/>
  <xacro:property name="caster_rear_left_y" value="base_width/2 - caster_xoff"/>
  <xacro:property name="caster_rear_left_z" value="-wheel_zoff"/>

  <xacro:property name="caster_rear_right_x" value="base_length/2 - caster_xoff"/>
  <xacro:property name="caster_rear_right_y" value="-base_width/2 + caster_xoff"/>
  <xacro:property name="caster_rear_right_z" value="-wheel_zoff"/>

  <!-- Define links and joints for wheels -->

  <link name="base_link"/>

  <!-- Main wheels -->
  <link name="main_wheel_left">
    <!-- Add visual, collision, and inertia properties here -->
  </link>
  <joint name="main_wheel_left_joint" type="revolute">
    <parent link="base_link"/>
    <child link="main_wheel_left"/>
    <origin xyz="${main_wheel_x} ${main_wheel_y + wheel_ygap} ${main_wheel_z}"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
  </joint>

  <link name="main_wheel_right">
    <!-- Add visual, collision, and inertia properties here -->
  </link>
  <joint name="main_wheel_right_joint" type="revolute">
    <parent link="base_link"/>
    <child link="main_wheel_right"/>
    <origin xyz="${main_wheel_x} ${-(main_wheel_y + wheel_ygap)} ${main_wheel_z}"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
  </joint>

  <!-- Caster wheels -->
  <!-- Front-left caster -->
  <link name="caster_front_left">
    <!-- Add visual, collision, and inertia properties here -->
  </link>
  <joint name="caster_front_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="caster_front_left"/>
    <origin xyz="${caster_front_left_x} ${caster_front_left_y} ${caster_front_left_z}"/>
  </joint>

  <!-- Front-right caster -->
  <link name="caster_front_right">
    <!-- Add visual, collision, and inertia properties here -->
  </link>
  <joint name="caster_front_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="caster_front_right"/>
    <origin xyz="${caster_front_right_x} ${caster_front_right_y} ${caster_front_right_z}"/>
  </joint>

  <!-- Rear-left caster -->
  <link name="caster_rear_left">
    <!-- Add visual, collision, and inertia properties here -->
  </link>
  <joint name="caster_rear_left_joint" type="continuous">
    <parent link="base_link"/>
    <child link="caster_rear_left"/>
    <origin xyz="${caster_rear_left_x} ${caster_rear_left_y} ${caster_rear_left_z}"/>
  </joint>

  <!-- Rear-right caster -->
  <link name="caster_rear_right">
    <!-- Add visual, collision, and inertia properties here -->
  </link>
  <joint name="caster_rear_right_joint" type="continuous">
    <parent link="base_link"/>
    <child link="caster_rear_right"/>
    <origin xyz="${caster_rear_right_x} ${caster_rear_right_y} ${caster_rear_right_z}"/>
  </joint>

</robot>

